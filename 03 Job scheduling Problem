/*
struct Job 
{ 
    int id;	 // Job Id 
    int dead; // Deadline of job 
    int profit; // Profit if job is over before or on deadline 
};
*/

class Solution 
{
    static bool comb(Job a, Job b){
        return a.profit > b.profit;
    }
    public:
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        sort(arr, arr+n, comb);
        vector<bool> vis(n, false);
        
        int maxprofit = 0; int jobcount = 0;
        
        for(int i = 0; i < n; i++){
            for(int j = arr[i].dead-1; j >= 0; j--){
                if(vis[j])
                    continue;
                else{
                    vis[j] = true;
                    maxprofit += arr[i].profit;
                    jobcount ++;
                    break;
                }
            }
        }
        
    return {jobcount, maxprofit};
    } 
};
